
{{- if and .Values.server.enabled (not .Values.server.run_on_control_plain) }}
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sshts.fullname" . }}
  labels:
    {{- include "sshts.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.server.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "sshts.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "sshts.selectorLabels" . | nindent 8 }}
    spec:
      # volumes:
      #   - name: ssh-keys
      #     emptyDir: {}
        # - name: sshts-client
        #   secret:
        #     secretName: sshts-client
        #     defaultMode: 0600 
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "sshts.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      
      # initContainers:
      # - name: generate-hostkeys
      #   image: busybox
      #   command: ["/bin/sh","-cxe","rm -v /etc/ssh/ssh_host_*; ssh-keygen -A"]
      #   securityContext:
      #     runAsUser: 0          
      #   # volumeMounts:
      #   #   - name: ssh-keys
      #   #     readOnly: false
      #   #     mountPath: "/home/tun/.ssh"
      #   #   - name: sshts-client
      #   #     readOnly: false
      #   #     # container will see /root/.ssh/id_rsa as usual:
      #   #     mountPath: "/keys/"
      containers:
        - name: {{ .Chart.Name }}
          volumeMounts:
          # - name: ssh-keys
          #   readOnly: true
          #   # container will see /root/.ssh/id_rsa as usual:
          #   mountPath: "/home/tun/.ssh"
          securityContext:
            runAsUser: 0
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}          
          command:
            - /bin/bash
            - "-cxe"
            - rm -v /etc/ssh/ssh_host_*; ssh-keygen -A; mkdir -pv /run/sshd; /usr/sbin/sshd -D
          ports:
            - name: ssh
              containerPort: {{ .Values.server.port }}
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}

{{- if .Values.tunnel.enabled }}
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sshts.fullname" . }}
  labels:
    {{- include "sshts.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.tunnel.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "sshts.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "sshts.selectorLabels" . | nindent 8 }}
    spec:
      volumes:
        - name: ssh-keys
          emptyDir: {}
        - name: sshts-client
          secret:
            secretName: sshts-client
            defaultMode: 0600 
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "sshts.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      
      initContainers:
      - name: change-ssh-key-owner
        image: busybox
        command: ["/bin/sh","-cxe","cp -v /keys/* /home/tun/.ssh/; chown -R 1000:1000 /home/tun/.ssh/; chmod 0600 /home/tun/.ssh/*"]
        securityContext:
          runAsUser: 0          
        volumeMounts:
          - name: ssh-keys
            readOnly: false
            mountPath: "/home/tun/.ssh"
          - name: sshts-client
            readOnly: false
            # container will see /root/.ssh/id_rsa as usual:
            mountPath: "/keys/"
      containers:
        - name: {{ .Chart.Name }}
          volumeMounts:
          - name: ssh-keys
            readOnly: true
            # container will see /root/.ssh/id_rsa as usual:
            mountPath: "/home/tun/.ssh"
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}          
          command:  
            - ssh 
            - -p 
            - "{{ .Values.tunnel.ssh.port | default "22"}}"
            - -i 
            - .ssh/id_ecdsa 
            - -vCNT
            - -o
            - StrictHostKeyChecking=no
            - -L0.0.0.0:{{ .Values.tunnel.local.port }}:{{ .Values.tunnel.remote.service }}:{{ .Values.tunnel.remote.port }}
            - -oUserKnownHostsFile=/dev/null 
            - -oForwardAgent=no
            - -oForwardX11=no
            - {{ .Values.tunnel.ssh.user }}@{{ .Values.tunnel.ssh.server }}
          ports:
            - name: {{ .Values.tunnel.local.port_name | default "tunnel" }}
              containerPort: {{ .Values.tunnel.local.port }}
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}